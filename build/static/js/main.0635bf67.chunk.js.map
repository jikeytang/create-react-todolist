{"version":3,"sources":["components/Header.js","components/Footer.js","components/Todo.js","components/TodoList.js","util/index.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","event","keyCode","value","target","this","props","addTodo","title","completed","react_default","a","createElement","className","type","onKeyUp","handleNewTodo","bind","placeholder","autoFocus","Component","Footer","_this","showCurrent","current","remaining","href","onClick","onRemoveCompleted","Todo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","editText","editing","onDestroy","index","onEdit","setState","onToggle","val","trim","onSave","e","which","handleSubmit","completedClass","join","checked","onChange","handleToggle","onDoubleClick","handleEdit","handleDestroy","onBlur","handleChange","onKeyDown","handleKeyDown","TodoList","todos","map","todo","components_Todo","assign","key","KEY","util","all","active","filter","fetch","JSON","parse","localStorage","getItem","save","setItem","stringify","TodoApp","filteredTodos","self","stateman","updateTodos","name","start","arguments","length","undefined","push","_save","splice","_ref","text","beforeEditCache","newTodos","Header_Header","id","toggleAll","htmlFor","components_TodoList","destroy","edit","toggle","components_Footer","removeCompleted","App","pages","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0635bf67.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n  handleNewTodo (event) {\r\n    if (event.keyCode === 13) {\r\n      const value = event.target.value\r\n\r\n      if (!value) {\r\n        return false\r\n      }\r\n\r\n      event.target.value = ''\r\n      this.props.addTodo({ title: value, completed: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <input type=\"text\" onKeyUp={this.handleNewTodo.bind(this)} placeholder=\"请输入待办事项\" className=\"new-todo\" autoFocus={true} />\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n\r\n\r\n  render () {\r\n    const showCurrent = (current) => {\r\n      return this.props.current === current ? 'selected' : ''\r\n    }\r\n\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">\r\n          <strong>{this.props.remaining}</strong> 项\r\n        </span>\r\n        <ul className=\"filters\">\r\n          <li>\r\n            <a href=\"#/\" className={showCurrent('all')}>全部</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/active\" className={showCurrent('active')}>进行中</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/completed\" className={showCurrent('completed')}>已完成</a>\r\n          </li>\r\n        </ul>\r\n        <button className=\"clear-completed\" onClick={this.props.onRemoveCompleted.bind(this)}>清除</button>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\n\r\nclass Todo extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      editText: props.title,\r\n      editing: null\r\n    }\r\n  }\r\n\r\n  handleDestroy () {\r\n    this.props.onDestroy(this.props.index)\r\n  }\r\n\r\n  handleEdit () {\r\n    this.props.onEdit(this.props)\r\n    this.setState({ editing: true })\r\n  }\r\n\r\n  handleToggle () {\r\n    this.props.onToggle(this.props.title, !this.props.completed)\r\n  }\r\n\r\n  handleSubmit () {\r\n    const val = this.state.editText.trim()\r\n\r\n    if (val) {\r\n      this.props.onSave(this.props.index, val)\r\n      this.setState({ editing: null})\r\n    } else {\r\n      this.props.onDestroy()\r\n    }\r\n  }\r\n\r\n  handleKeyDown (e) {\r\n    if (e.which === 27) {\r\n      this.setState({ editText: this.props.title })\r\n      // this.props.onCancel(e)\r\n    } else if (e.which === 13) {\r\n      this.handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  handleChange (e) {\r\n    if (this.state.editing) {\r\n      this.setState({ editText: e.target.value })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { completed } = this.props\r\n    const completedClass = [completed ? 'completed' : '', this.state.editing ? 'editing' : ''].join(' ')\r\n\r\n    return (\r\n      <li className={completedClass}>\r\n        <div className=\"view\">\r\n          <input type=\"checkbox\" className=\"toggle\" checked={completed} onChange={this.handleToggle.bind(this)}/>\r\n          <label onDoubleClick={this.handleEdit.bind(this)}>{this.props.title}</label>\r\n          <button className=\"destroy\" onClick={this.handleDestroy.bind(this)}/>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"edit\"\r\n          value={this.state.editText}\r\n          onBlur={this.handleSubmit.bind(this)}\r\n          onChange={this.handleChange.bind(this)}\r\n          onKeyDown={this.handleKeyDown.bind(this)}\r\n        />\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todo","import React, { Component } from 'react'\r\nimport Todo from './Todo'\r\n\r\nclass TodoList extends Component {\r\n  render () {\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {this.props.todos.map((todo, index) => {\r\n          return <Todo key={index} index={index} {...todo} {...this.props}></Todo>\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList","const KEY = 'create-react-cli-todos'\r\n\r\nexport default {\r\n  all (todos) {\r\n    return todos\r\n  },\r\n  active (todos) {\r\n    return todos.filter(todo => {\r\n      return !todo.completed\r\n    })\r\n  },\r\n  completed (todos) {\r\n    return todos.filter(todo => {\r\n      return todo.completed\r\n    })\r\n  },\r\n  fetch () {\r\n    return JSON.parse(localStorage.getItem(KEY) || '[]')\r\n  },\r\n  save (todo) {\r\n    localStorage.setItem(KEY, JSON.stringify(todo))\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport Header from '@/components/Header'\r\nimport Footer from '@/components/Footer'\r\nimport TodoList from '@/components/TodoList'\r\nimport stateman from 'stateman'\r\nimport util from '@/util'\r\n\r\nclass TodoApp extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      todos: util.fetch() || [],\r\n      filteredTodos: [],\r\n      current: 'all',\r\n      remaining: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const self = this\r\n    const router = new stateman()\r\n    router\r\n      .state(\"/\", function () {\r\n        self.setState({ current: 'all' })\r\n        self.updateTodos()\r\n      })\r\n      .state(\"active\", function () {\r\n        self.setState({ current: this.name })\r\n        self.updateTodos()\r\n      })\r\n      .state(\"completed\", function () {\r\n        self.setState({ current: this.name })\r\n        self.updateTodos()\r\n      })\r\n      .start()\r\n\r\n    self.updateTodos()\r\n  }\r\n\r\n  updateTodos (todos = util[this.state.current](this.state.todos)) {\r\n    this.setState({ filteredTodos: todos })\r\n  }\r\n\r\n  _save (todos = this.state.todos) {\r\n    this.setState({ todos: todos })\r\n    this.updateTodos(todos)\r\n    util.save(todos)\r\n  }\r\n\r\n  addTodo (todo) {\r\n    this.state.todos.push(todo)\r\n    this._save()\r\n  }\r\n\r\n  destroy (index) {\r\n    this.state.todos.splice(index, 1)\r\n    this._save()\r\n  }\r\n\r\n  edit ({ index, text }) {\r\n    this.beforeEditCache = text\r\n  }\r\n\r\n  toggle (title, completed) {\r\n    const newTodos = this.state.todos.map((todo, index) => {\r\n      if (title === todo.title) {\r\n        todo.completed = completed\r\n      }\r\n      return todo\r\n    })\r\n\r\n    this._save(newTodos)\r\n  }\r\n\r\n  save (index, val) {\r\n    let newTodos = this.state.todos\r\n    newTodos[index].title = val\r\n\r\n    this._save(newTodos)\r\n  }\r\n\r\n  toggleAll (e) {\r\n    let newTodos = this.state.todos.map(todo => {\r\n      return Object.assign({}, todo, { completed: true })\r\n    })\r\n\r\n    this._save(newTodos)\r\n  }\r\n\r\n  removeCompleted () {\r\n    const newTodos = util.active(this.state.todos)\r\n    this._save(newTodos)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"todoapp\">\r\n        <Header addTodo={this.addTodo.bind(this)}></Header>\r\n        <section className=\"main\">\r\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" onChange={this.toggleAll.bind(this)} />\r\n          <label htmlFor=\"toggle-all\"/>\r\n          <TodoList\r\n            todos={this.state.filteredTodos}\r\n            onDestroy={this.destroy.bind(this)}\r\n            onEdit={this.edit.bind(this)}\r\n            onToggle={this.toggle.bind(this)}\r\n            onSave={this.save.bind(this)}\r\n          />\r\n        </section>\r\n        <Footer\r\n          current={this.state.current}\r\n          remaining={util.all(this.state.todos).length}\r\n          onRemoveCompleted={this.removeCompleted.bind(this)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TodoApp","import React from 'react'\r\nimport './styles/App.css'\r\nimport TodoApp from './pages'\r\n// import { createStore } from 'redux'\r\n// import { Provider } from 'react-redux'\r\n// import rootReducer from './reducers'\r\n\r\n// const store = createStore(rootReducer)\r\n\r\nfunction App () {\r\n  return (\r\n    // <Provider store={store}>\r\n      <TodoApp />\r\n    // </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'todomvc-common/base.css'\r\nimport 'todomvc-app-css/index.css'\r\nimport './styles/App.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}